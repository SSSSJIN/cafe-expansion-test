-- 1. USERS 테이블
CREATE TABLE USERS (
  ID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  USERNAME  VARCHAR2(50) UNIQUE NOT NULL,
  PASSWORD  VARCHAR2(100) NOT NULL,
  ROLE      VARCHAR2(20) DEFAULT 'ROLE_USER' NOT NULL
);

-- 2. BOOK 테이블
CREATE TABLE BOOK (
  ID          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  TITLE       VARCHAR2(200) NOT NULL,
  EPISODE     NUMBER NOT NULL,
  AUTHOR      VARCHAR2(100) NOT NULL,
  DESCRIPTION VARCHAR2(1000),
  IMAGE       VARCHAR2(300),
  REGDATE     TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- 3. BOARD 테이블
CREATE TABLE BOARD (
  ID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  TITLE     VARCHAR2(200) NOT NULL,
  CONTENT   CLOB NOT NULL,
  WRITER    VARCHAR2(50) NOT NULL,
  REGDATE   TIMESTAMP DEFAULT SYSTIMESTAMP,
  HOT_FLAG  NUMBER(1) DEFAULT 0 NOT NULL,
  TOP_RANK  NUMBER(2)
);

-- 4. COMMENTS 테이블 (예약어 피함)
CREATE TABLE COMMENTS (
  ID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  BOARD_ID  NUMBER NOT NULL,
  CONTENT   VARCHAR2(1000) NOT NULL,
  WRITER    VARCHAR2(50) NOT NULL,
  REGDATE   TIMESTAMP DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_COMMENTS_BOARD FOREIGN KEY (BOARD_ID)
    REFERENCES BOARD(ID) ON DELETE CASCADE
);

-- 5. RECENT_VIEW 테이블 (마지막에 생성)
CREATE TABLE RECENT_VIEW (
  ID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  USER_ID   NUMBER NOT NULL,
  BOOK_ID   NUMBER,
  VIEW_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_RECENT_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
  CONSTRAINT FK_RECENT_BOOK FOREIGN KEY (BOOK_ID) REFERENCES BOOK(ID) ON DELETE CASCADE
);

-- 1. USERS 데이터
INSERT INTO USERS (USERNAME, PASSWORD, ROLE) VALUES
  ('alice',   '<bcrypt-hash-of-alice>',   'ROLE_USER'),
  ('bob',     '<bcrypt-hash-of-bob>',     'ROLE_USER'),
  ('charlie', '<bcrypt-hash-of-charlie>', 'ROLE_USER'),
  ('testuser','<bcrypt-hash-of-testuser>','ROLE_USER');

-- 2. BOOK 데이터 (에피소드 10개)
INSERT INTO BOOK (TITLE, EPISODE, AUTHOR, DESCRIPTION, IMAGE) VALUES
  ('마법사의 서', 1, '김작가', '마법사 이야기 1화', '/resources/image/book1_1.jpg'),
  ('마법사의 서', 2, '김작가', '마법사 이야기 2화', '/resources/image/book1_2.jpg'),
  ('마법사의 서', 3, '김작가', '마법사 이야기 3화', '/resources/image/book1_3.jpg'),
  ('마법사의 서', 4, '김작가', '마법사 이야기 4화', '/resources/image/book1_4.jpg'),
  ('마법사의 서', 5, '김작가', '마법사 이야기 5화', '/resources/image/book1_5.jpg'),
  ('마법사의 서', 6, '김작가', '마법사 이야기 6화', '/resources/image/book1_6.jpg'),
  ('마법사의 서', 7, '김작가', '마법사 이야기 7화', '/resources/image/book1_7.jpg'),
  ('마법사의 서', 8, '김작가', '마법사 이야기 8화', '/resources/image/book1_8.jpg'),
  ('마법사의 서', 9, '김작가', '마법사 이야기 9화', '/resources/image/book1_9.jpg'),
  ('마법사의 서', 10, '김작가', '마법사 이야기 10화', '/resources/image/book1_10.jpg');

-- 3. BOARD 데이터
INSERT INTO BOARD (TITLE, CONTENT, WRITER, HOT_FLAG, TOP_RANK) VALUES
  ('첫 번째 게시글', '안녕하세요, Alice입니다!', 'alice', 0, NULL),
  ('두 번째 게시글', 'Bob의 한 줄 감상입니다.', 'bob', 1, 3),
  ('세 번째 게시글', 'Charlie의 테스트 글.', 'charlie', 0, NULL),
  ('네 번째 게시글', '게시판 더미 콘텐츠입니다.', 'alice', 1, 1),
  ('다섯 번째 게시글', '마지막 더미 글입니다.', 'bob', 0, NULL);

-- 4. COMMENTS 데이터
INSERT INTO COMMENTS (BOARD_ID, CONTENT, WRITER) VALUES
  (1, '댓글 1 on 게시글1', 'bob'),
  (1, '댓글 2 on 게시글1', 'charlie'),
  (2, '첫 댓글 on 게시글2', 'alice'),
  (2, '두 번째 댓글 on 게시글2', 'charlie'),
  (3, '테스트 댓글1 on 게시글3', 'alice'),
  (3, '테스트 댓글2 on 게시글3', 'bob'),
  (4, '댓글1 on 게시글4', 'charlie'),
  (4, '댓글2 on 게시글4', 'testuser'),
  (5, '댓글1 on 게시글5', 'alice'),
  (5, '댓글2 on 게시글5', 'bob');

-- 5. 관리자 계정
INSERT INTO USERS (USERNAME, PASSWORD, ROLE) VALUES
  ('admin', '<bcrypt-hash-of-admin>', 'ROLE_ADMIN');

COMMIT;

-- 6. MAIN_EVENT 테이블
CREATE TABLE MAIN_EVENT (
  ID         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  TITLE      VARCHAR2(200)   NOT NULL,
  IMAGE_URL  VARCHAR2(300)   NOT NULL,
  SORT_ORDER NUMBER          DEFAULT 0 NOT NULL
);

-- 7. MAIN_EVENT 샘플 데이터
INSERT INTO MAIN_EVENT (TITLE, IMAGE_URL, SORT_ORDER) VALUES
  ('여름 이벤트', '/resources/image/event_summer.jpg', 1),
  ('신간 추천', '/resources/image/event_new.jpg', 2);

COMMIT;

-- ▼ 카페 확장 프로젝트 메인 이벤트 테이블 추가
CREATE TABLE MAIN_EVENT (
  ID         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  TITLE      VARCHAR2(200)   NOT NULL,
  IMAGE_URL  VARCHAR2(300)   NOT NULL,
  SORT_ORDER NUMBER          DEFAULT 0 NOT NULL
);

-- 샘플 데이터
INSERT INTO MAIN_EVENT (TITLE, IMAGE_URL, SORT_ORDER) VALUES
  ('여름 이벤트', '/resources/image/event_summer.jpg', 1);
INSERT INTO MAIN_EVENT (TITLE, IMAGE_URL, SORT_ORDER) VALUES
  ('신간 추천', '/resources/image/event_new.jpg', 2);

COMMIT;

SELECT table_name
  FROM user_tables
 WHERE table_name = 'MAIN_EVENT';

CREATE TABLE MAIN_EVENT (
  ID         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  TITLE      VARCHAR2(200)   NOT NULL,
  IMAGE_URL  VARCHAR2(300)   NOT NULL,
  SORT_ORDER NUMBER          DEFAULT 0 NOT NULL
);
COMMIT;

INSERT INTO MAIN_EVENT (TITLE, IMAGE_URL, SORT_ORDER)
VALUES ('샘플 이벤트', '/resources/image/event_sample.jpg', 1);
COMMIT;

-- (1) 현재 유저 확인
SELECT USER FROM DUAL;
/

-- (2) 기존에 남아있을지 모르는 MAIN_EVENT 드롭
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE MAIN_EVENT';
EXCEPTION WHEN OTHERS THEN
  IF SQLCODE != -942 THEN RAISE; END IF;
END;
/
-- (3) 테이블 생성
CREATE TABLE MAIN_EVENT (
  ID         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  TITLE      VARCHAR2(200) NOT NULL,
  IMAGE_URL  VARCHAR2(300) NOT NULL,
  SORT_ORDER NUMBER DEFAULT 0 NOT NULL
);
/

-- (4) 샘플 데이터 삽입
INSERT INTO MAIN_EVENT (TITLE, IMAGE_URL, SORT_ORDER)
VALUES ('샘플 이벤트1', '/resources/image/event1.jpg', 1);
/
COMMIT;
/

-- (5) 객체 존재 여부 조회 (전체 스키마 검색)
SELECT owner, object_name, object_type, status
  FROM all_objects
 WHERE object_name = 'MAIN_EVENT';
/

SELECT * 
  FROM MAIN_EVENT
 ORDER BY SORT_ORDER, ID;
 
 INSERT INTO MAIN_EVENT (TITLE, IMAGE_URL, SORT_ORDER)
VALUES ('샘플 이벤트2', '/resources/image/event2.jpg', 2);

COMMIT;

SELECT * 
  FROM MAIN_EVENT
 ORDER BY SORT_ORDER, ID;

-- (1) HR 세션 확인
SELECT USER FROM DUAL;
/

-- (2) 현재 데이터 행 수 확인
SELECT COUNT(*) AS CNT FROM MAIN_EVENT;
/

-- (3) 샘플 이벤트2 삽입
INSERT INTO MAIN_EVENT (TITLE, IMAGE_URL, SORT_ORDER)
VALUES ('샘플 이벤트2', '/resources/image/event2.jpg', 2);
/
COMMIT;
/

-- (4) 최종 데이터 조회
SELECT ID, TITLE, IMAGE_URL, SORT_ORDER
  FROM MAIN_EVENT
 ORDER BY SORT_ORDER, ID;
/

DELETE FROM MAIN_EVENT
 WHERE ID = 3;
/
COMMIT;
/

SELECT * FROM MAIN_EVENT ORDER BY SORT_ORDER, ID;

-- 이벤트1
INSERT INTO MAIN_EVENT (TITLE, IMAGE_URL, SORT_ORDER)
VALUES ('여름 이벤트', '/resources/image/event_summer.jpg', 1);
/
-- 이벤트2
INSERT INTO MAIN_EVENT (TITLE, IMAGE_URL, SORT_ORDER)
VALUES ('신간 추천',  '/resources/image/event_new.jpg',    2);
/
COMMIT;
/

SELECT * FROM MAIN_EVENT ORDER BY SORT_ORDER, ID;

ALTER TABLE USERS ADD KAKAO_ID VARCHAR2(50);
ALTER TABLE USERS ADD NICKNAME VARCHAR2(100);

CREATE TABLE BOOKS_DEMO (
    ID NUMBER PRIMARY KEY,
    TITLE VARCHAR2(200) NOT NULL,
    AUTHOR VARCHAR2(100),
    GENRE VARCHAR2(50),
    DESCRIPTION VARCHAR2(500),
    IMAGE_URL VARCHAR2(300)
);

INSERT INTO BOOKS_DEMO (ID, TITLE, AUTHOR, GENRE, DESCRIPTION, IMAGE_URL) VALUES (2, '데뷔 못 하면 죽는 병 걸림', '작가2', '아이돌', '아이돌 학원물', '/resources/image/img_40.jpg');
INSERT INTO BOOKS_DEMO (ID, TITLE, AUTHOR, GENRE, DESCRIPTION, IMAGE_URL) VALUES (3, '랭커를 위한 바른 생활 안내서', '작가3', '판타지', '게임 판타지 소설', '/resources/image/img_41.jpg');
INSERT INTO BOOKS_DEMO (ID, TITLE, AUTHOR, GENRE, DESCRIPTION, IMAGE_URL) VALUES (4, '제암진천경', '작가4', '무협', '신무협 소설', '/resources/image/img_42.jpg');
INSERT INTO BOOKS_DEMO (ID, TITLE, AUTHOR, GENRE, DESCRIPTION, IMAGE_URL) VALUES (5, '작품5', '작가5', '장르5', '설명5', '/resources/image/img_43.jpg');
INSERT INTO BOOKS_DEMO (ID, TITLE, AUTHOR, GENRE, DESCRIPTION, IMAGE_URL) VALUES (6, '작품6', '작가6', '장르6', '설명6', '/resources/image/img_44.jpg');
INSERT INTO BOOKS_DEMO (ID, TITLE, AUTHOR, GENRE, DESCRIPTION, IMAGE_URL) VALUES (7, '작품7', '작가7', '장르7', '설명7', '/resources/image/img_45.jpg');
INSERT INTO BOOKS_DEMO (ID, TITLE, AUTHOR, GENRE, DESCRIPTION, IMAGE_URL) VALUES (8, '작품8', '작가8', '장르8', '설명8', '/resources/image/img_46.jpg');
INSERT INTO BOOKS_DEMO (ID, TITLE, AUTHOR, GENRE, DESCRIPTION, IMAGE_URL) VALUES (9, '작품9', '작가9', '장르9', '설명9', '/resources/image/img_47.jpg');
INSERT INTO BOOKS_DEMO (ID, TITLE, AUTHOR, GENRE, DESCRIPTION, IMAGE_URL) VALUES (10, '작품10', '작가10', '장르10', '설명10', '/resources/image/img_48.jpg');
COMMIT;

SELECT * FROM BOOKS_DEMO;

ALTER TABLE BOOKS_DEMO ADD THUMBNAIL VARCHAR2(300);

SELECT USER FROM DUAL;

SELECT TABLE_NAME FROM USER_TABLES;

SELECT * FROM BOOKS_DEMO;

SELECT OWNER, TABLE_NAME FROM ALL_TABLES WHERE TABLE_NAME = 'BOOKS_DEMO';





