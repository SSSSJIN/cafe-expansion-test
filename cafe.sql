-- 1. USERS 테이블
CREATE TABLE USERS (
  ID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  USERNAME  VARCHAR2(50) UNIQUE NOT NULL,
  PASSWORD  VARCHAR2(100) NOT NULL,
  ROLE      VARCHAR2(20) DEFAULT 'ROLE_USER' NOT NULL
);

-- 2. BOOK 테이블
CREATE TABLE BOOK (
  ID          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  TITLE       VARCHAR2(200) NOT NULL,
  EPISODE     NUMBER NOT NULL,
  AUTHOR      VARCHAR2(100) NOT NULL,
  DESCRIPTION VARCHAR2(1000),
  IMAGE       VARCHAR2(300),
  REGDATE     TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- 3. BOARD 테이블
CREATE TABLE BOARD (
  ID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  TITLE     VARCHAR2(200) NOT NULL,
  CONTENT   CLOB NOT NULL,
  WRITER    VARCHAR2(50) NOT NULL,
  REGDATE   TIMESTAMP DEFAULT SYSTIMESTAMP,
  HOT_FLAG  NUMBER(1) DEFAULT 0 NOT NULL,
  TOP_RANK  NUMBER(2)
);

-- 4. COMMENTS 테이블 (예약어 피함)
CREATE TABLE COMMENTS (
  ID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  BOARD_ID  NUMBER NOT NULL,
  CONTENT   VARCHAR2(1000) NOT NULL,
  WRITER    VARCHAR2(50) NOT NULL,
  REGDATE   TIMESTAMP DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_COMMENTS_BOARD FOREIGN KEY (BOARD_ID)
    REFERENCES BOARD(ID) ON DELETE CASCADE
);

-- 5. RECENT_VIEW 테이블 (마지막에 생성)
CREATE TABLE RECENT_VIEW (
  ID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  USER_ID   NUMBER NOT NULL,
  BOOK_ID   NUMBER,
  VIEW_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_RECENT_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
  CONSTRAINT FK_RECENT_BOOK FOREIGN KEY (BOOK_ID) REFERENCES BOOK(ID) ON DELETE CASCADE
);

-- 1. USERS 데이터
INSERT INTO USERS (USERNAME, PASSWORD, ROLE) VALUES
  ('alice',   '<bcrypt-hash-of-alice>',   'ROLE_USER'),
  ('bob',     '<bcrypt-hash-of-bob>',     'ROLE_USER'),
  ('charlie', '<bcrypt-hash-of-charlie>', 'ROLE_USER'),
  ('testuser','<bcrypt-hash-of-testuser>','ROLE_USER');

-- 2. BOOK 데이터 (에피소드 10개)
INSERT INTO BOOK (TITLE, EPISODE, AUTHOR, DESCRIPTION, IMAGE) VALUES
  ('마법사의 서', 1, '김작가', '마법사 이야기 1화', '/resources/image/book1_1.jpg'),
  ('마법사의 서', 2, '김작가', '마법사 이야기 2화', '/resources/image/book1_2.jpg'),
  ('마법사의 서', 3, '김작가', '마법사 이야기 3화', '/resources/image/book1_3.jpg'),
  ('마법사의 서', 4, '김작가', '마법사 이야기 4화', '/resources/image/book1_4.jpg'),
  ('마법사의 서', 5, '김작가', '마법사 이야기 5화', '/resources/image/book1_5.jpg'),
  ('마법사의 서', 6, '김작가', '마법사 이야기 6화', '/resources/image/book1_6.jpg'),
  ('마법사의 서', 7, '김작가', '마법사 이야기 7화', '/resources/image/book1_7.jpg'),
  ('마법사의 서', 8, '김작가', '마법사 이야기 8화', '/resources/image/book1_8.jpg'),
  ('마법사의 서', 9, '김작가', '마법사 이야기 9화', '/resources/image/book1_9.jpg'),
  ('마법사의 서', 10, '김작가', '마법사 이야기 10화', '/resources/image/book1_10.jpg');

-- 3. BOARD 데이터
INSERT INTO BOARD (TITLE, CONTENT, WRITER, HOT_FLAG, TOP_RANK) VALUES
  ('첫 번째 게시글', '안녕하세요, Alice입니다!', 'alice', 0, NULL),
  ('두 번째 게시글', 'Bob의 한 줄 감상입니다.', 'bob', 1, 3),
  ('세 번째 게시글', 'Charlie의 테스트 글.', 'charlie', 0, NULL),
  ('네 번째 게시글', '게시판 더미 콘텐츠입니다.', 'alice', 1, 1),
  ('다섯 번째 게시글', '마지막 더미 글입니다.', 'bob', 0, NULL);

-- 4. COMMENTS 데이터
INSERT INTO COMMENTS (BOARD_ID, CONTENT, WRITER) VALUES
  (1, '댓글 1 on 게시글1', 'bob'),
  (1, '댓글 2 on 게시글1', 'charlie'),
  (2, '첫 댓글 on 게시글2', 'alice'),
  (2, '두 번째 댓글 on 게시글2', 'charlie'),
  (3, '테스트 댓글1 on 게시글3', 'alice'),
  (3, '테스트 댓글2 on 게시글3', 'bob'),
  (4, '댓글1 on 게시글4', 'charlie'),
  (4, '댓글2 on 게시글4', 'testuser'),
  (5, '댓글1 on 게시글5', 'alice'),
  (5, '댓글2 on 게시글5', 'bob');

-- 5. 관리자 계정
INSERT INTO USERS (USERNAME, PASSWORD, ROLE) VALUES
  ('admin', '<bcrypt-hash-of-admin>', 'ROLE_ADMIN');

COMMIT;

